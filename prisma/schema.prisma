generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Usuario {
    id               String   @id @default(uuid())
    customer_id      String?  @unique
    nome             String   @db.VarChar(255)
    email            String   @unique @db.VarChar(120)
    senha            String   @db.Char(60)
    data_nascimento  Int
    premium          Int      @default(0) @db.TinyInt
    termos_condicoes Int      @db.TinyInt
    created_at       DateTime @default(now())
    updated_at       DateTime @updatedAt
    cargo           String   @default("user")

    tokens Token[]
    metas  Meta[]
    tags   Tag[]
}

model Token {
    id         String   @id @default(uuid())
    user_email String   @db.VarChar(120)
    created_at DateTime @default(now())

    email Usuario @relation(fields: [user_email], references: [email], onDelete: Cascade, onUpdate: Cascade)
}

model Meta {
    id               String   @id @default(uuid())
    user_id          String
    nome_meta        String   @db.VarChar(120)
    valor_meta       Float
    valor_destinado  Float
    periodo_deposito String
    created_at       DateTime @default(now())
    updated_at       DateTime @updatedAt

    user           Usuario          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    historico_meta Historico_Meta[]
}

model Historico_Meta {
    id               String   @id @default(uuid())
    meta_id          String
    valor_depositado Float
    periodo_cumprido Int      @default(1) @db.TinyInt
    created_at       DateTime @default(now())
    updated_at       DateTime @updatedAt

    meta Meta @relation(fields: [meta_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Tag {
    id         String   @id @default(uuid())
    user_id    String
    nome_tag   String   @db.VarChar(120)
    cor_tag    String   @db.Char(7)
    tag_global Int      @default(0) @db.TinyInt
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    user Usuario @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
